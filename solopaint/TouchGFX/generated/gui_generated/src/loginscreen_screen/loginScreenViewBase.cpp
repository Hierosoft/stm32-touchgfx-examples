/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/loginscreen_screen/loginScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

loginScreenViewBase::loginScreenViewBase() :
    buttonCallback(this, &loginScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    authUrlValueTA.setXY(323, 416);
    authUrlValueTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    authUrlValueTA.setLinespacing(0);
    authUrlValueTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_K8G5));
    add(authUrlValueTA);

    authUrlCaptionTA.setXY(40, 416);
    authUrlCaptionTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    authUrlCaptionTA.setLinespacing(0);
    authUrlCaptionTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4KRO));
    add(authUrlCaptionTA);

    loginTitleTA.setPosition(260, 0, 280, 59);
    loginTitleTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    loginTitleTA.setLinespacing(0);
    loginTitleTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_XFRE));
    add(loginTitleTA);

    boxWithBorder.setPosition(191, 82, 570, 50);
    boxWithBorder.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    boxWithBorder.setBorderColor(touchgfx::Color::getColorFromRGB(66, 66, 65));
    boxWithBorder.setBorderSize(5);
    add(boxWithBorder);

    usernameBorder.setPosition(191, 142, 570, 50);
    usernameBorder.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    usernameBorder.setBorderColor(touchgfx::Color::getColorFromRGB(66, 66, 65));
    usernameBorder.setBorderSize(5);
    add(usernameBorder);

    passwordBorder.setPosition(191, 202, 570, 50);
    passwordBorder.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    passwordBorder.setBorderColor(touchgfx::Color::getColorFromRGB(66, 66, 65));
    passwordBorder.setBorderSize(5);
    add(passwordBorder);

    passwordEntryTA.setXY(206, 216);
    passwordEntryTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    passwordEntryTA.setLinespacing(0);
    passwordEntryTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1QCP));
    add(passwordEntryTA);

    siteEntryTA.setXY(206, 95);
    siteEntryTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    siteEntryTA.setLinespacing(0);
    siteEntryTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_PVSW));
    add(siteEntryTA);

    usernameEntryTA.setXY(206, 155);
    usernameEntryTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    usernameEntryTA.setLinespacing(0);
    usernameEntryTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YLV4));
    add(usernameEntryTA);

    statusTA.setPosition(0, 447, 800, 27);
    statusTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    statusTA.setLinespacing(0);
    statusTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_N9U0));
    add(statusTA);

    authUrlQrcode.setXY(191, 321);
    authUrlQrcode.setBuffers(qrBuffer_authUrlQrcode, qrScratchBuffer_authUrlQrcode);
    authUrlQrcode.setVisible(false);
    authUrlQrcode.setQRCodeVersion(1);
    authUrlQrcode.setScale(6);
    authUrlQrcode.convertStringToQRCode("https://hierosoft.com/solopaint-help");
    add(authUrlQrcode);

    okButton.setXY(274, 274);
    okButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_ACTION_ID));
    okButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_X6A6));
    okButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    okButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    okButton.setAction(buttonCallback);
    add(okButton);

    siteButton.setXY(40, 89);
    siteButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_ACTION_ID));
    siteButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_UIO1));
    siteButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    siteButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    siteButton.setAction(buttonCallback);
    add(siteButton);

    usernameButton.setXY(40, 149);
    usernameButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_ACTION_ID));
    usernameButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_A8Z0));
    usernameButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    usernameButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    usernameButton.setAction(buttonCallback);
    add(usernameButton);

    passwordButton.setXY(40, 209);
    passwordButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_ACTION_ID));
    passwordButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_OY2V));
    passwordButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    passwordButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    passwordButton.setAction(buttonCallback);
    add(passwordButton);

    cancelButton.setXY(427, 274);
    cancelButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUNDED_ACTION_ID));
    cancelButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_VWYL));
    cancelButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cancelButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cancelButton.setAction(buttonCallback);
    add(cancelButton);
}

loginScreenViewBase::~loginScreenViewBase()
{

}

void loginScreenViewBase::setupScreen()
{

}

void loginScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &okButton)
    {
        //okLogin
        //When okButton clicked execute C++ code
        //Execute C++ code
        // TODO: attempt to login or get auth URL
    }
    if (&src == &cancelButton)
    {
        //navLoginToStorage
        //When cancelButton clicked change screen to storageSettingsScreen
        //Go to storageSettingsScreen with no screen transition
        application().gotostorageSettingsScreenScreenNoTransition();
    }
    if (&src == &siteButton)
    {
        //siteButtonClicked
        //When siteButton clicked execute C++ code
        //Execute C++ code
        // TODO: Set on-screen keyboard focus to siteEntryTA, unless disallowed (in that case siteEntryTA's value is "Google Drive")
    }
    if (&src == &usernameButton)
    {
        //usernameButtonClicked
        //When usernameButton clicked execute C++ code
        //Execute C++ code
        // TODO: Set on-screen keyboard focus to usernameEntryTA
    }
    if (&src == &passwordButton)
    {
        //passwordButtonClicked
        //When passwordButton clicked execute C++ code
        //Execute C++ code
        // TODO: Set on-screen keyboard focus to passwordEntryTA
    }
}

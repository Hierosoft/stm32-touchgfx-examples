/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/settingsscreen_screen/settingsScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

settingsScreenViewBase::settingsScreenViewBase() :
    buttonCallback(this, &settingsScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    sdStatusCaptionTA.setXY(30, 402);
    sdStatusCaptionTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    sdStatusCaptionTA.setLinespacing(0);
    sdStatusCaptionTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_C75V));
    add(sdStatusCaptionTA);

    sdStatusValueTA.setXY(179, 402);
    sdStatusValueTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    sdStatusValueTA.setLinespacing(0);
    sdStatusValueTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_6PC5));
    add(sdStatusValueTA);

    backButton.setXY(0, 0);
    backButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_70_70_000000_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_BACK_70_70_FFFFFF_SVG_ID));
    backButton.setIconXY(-5, -4);
    backButton.setAction(buttonCallback);
    add(backButton);

    brushButton.setXY(67, 0);
    brushButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_ICON_ROUND_TINY_FILL_ACTION_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_BRUSH_60_60_000000_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_IMAGE_BRUSH_60_60_FFFFFF_SVG_ID));
    brushButton.setIconXY(0, 0);
    brushButton.setAction(buttonCallback);
    add(brushButton);

    showColoringBookLayerCaptionTA.setXY(207, 267);
    showColoringBookLayerCaptionTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    showColoringBookLayerCaptionTA.setLinespacing(0);
    showColoringBookLayerCaptionTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_UOT8));
    add(showColoringBookLayerCaptionTA);

    colorInLinesCaptionTA.setXY(207, 205);
    colorInLinesCaptionTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    colorInLinesCaptionTA.setLinespacing(0);
    colorInLinesCaptionTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1R3Y));
    add(colorInLinesCaptionTA);

    settingsTitleTA.setPosition(253, 0, 294, 60);
    settingsTitleTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    settingsTitleTA.setLinespacing(0);
    settingsTitleTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_YVFI));
    add(settingsTitleTA);

    coloringBookTitleTA.setPosition(0, 103, 800, 36);
    coloringBookTitleTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    coloringBookTitleTA.setLinespacing(0);
    coloringBookTitleTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_5WKQ));
    add(coloringBookTitleTA);

    coloringBookSubtitleTA.setPosition(0, 130, 800, 36);
    coloringBookSubtitleTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    coloringBookSubtitleTA.setLinespacing(0);
    coloringBookSubtitleTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_1PS6));
    add(coloringBookSubtitleTA);

    colorInLinesToggle.setXY(483, 192);
    colorInLinesToggle.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_OFF_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_ON_ACTIVE_ID));
    colorInLinesToggle.forceState(true);
    colorInLinesToggle.setAction(buttonCallback);
    add(colorInLinesToggle);

    showColoringBookLayerToggle.setXY(483, 254);
    showColoringBookLayerToggle.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_OFF_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_ON_ACTIVE_ID));
    showColoringBookLayerToggle.forceState(true);
    showColoringBookLayerToggle.setAction(buttonCallback);
    add(showColoringBookLayerToggle);
}

settingsScreenViewBase::~settingsScreenViewBase()
{

}

void settingsScreenViewBase::setupScreen()
{

}

void settingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &backButton)
    {
        //navSettingsToDraw
        //When backButton clicked change screen to drawScreen
        //Go to drawScreen with no screen transition
        application().gotodrawScreenScreenNoTransition();
    }
    if (&src == &brushButton)
    {
        //navSettingsToBrush
        //When brushButton clicked change screen to brushScreen
        //Go to brushScreen with no screen transition
        application().gotobrushScreenScreenNoTransition();
    }
    if (&src == &colorInLinesToggle)
    {
        //changedColorInLinesToggle
        //When colorInLinesToggle clicked execute C++ code
        //Execute C++ code
        // TODO: save colorInLinesToggle setting
    }
    if (&src == &showColoringBookLayerToggle)
    {
        //changedShowColoringBookLayerToggle
        //When showColoringBookLayerToggle clicked execute C++ code
        //Execute C++ code
        // TODO: save showColoringBookLayerToggle setting
    }
}

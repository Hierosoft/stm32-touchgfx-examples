/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/filesscreen_screen/filesScreenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

filesScreenViewBase::filesScreenViewBase() :
    updateItemCallback(this, &filesScreenViewBase::updateItemCallbackHandler),
    buttonCallback(this, &filesScreenViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    coloringBookLayerCaptionTA.setXY(207, 381);
    coloringBookLayerCaptionTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    coloringBookLayerCaptionTA.setLinespacing(0);
    coloringBookLayerCaptionTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0Z81));
    add(coloringBookLayerCaptionTA);

    coloringBookLayerToggle.setXY(483, 368);
    coloringBookLayerToggle.setBitmaps(touchgfx::Bitmap(BITMAP_DARK_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_OFF_DARK_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_MEDIUM_ROUND_ON_ACTIVE_ID));
    add(coloringBookLayerToggle);

    okButton.setXY(255, 438);
    okButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_ACTION_ID));
    okButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_A0J6));
    okButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    okButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    okButton.setAction(buttonCallback);
    add(okButton);

    cancelButton.setXY(408, 438);
    cancelButton.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_PRESSED_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_SMALL_ROUND_ACTION_ID));
    cancelButton.setLabelText(touchgfx::TypedText(T___SINGLEUSE_AXIJ));
    cancelButton.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cancelButton.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    cancelButton.setAction(buttonCallback);
    add(cancelButton);

    titleTA.setPosition(278, 0, 245, 59);
    titleTA.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    titleTA.setLinespacing(0);
    titleTA.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4XGM));
    add(titleTA);

    filesScrollWheel.setPosition(350, 59, 100, 309);
    filesScrollWheel.setHorizontal(false);
    filesScrollWheel.setCircular(false);
    filesScrollWheel.setEasingEquation(touchgfx::EasingEquations::backEaseOut);
    filesScrollWheel.setSwipeAcceleration(10);
    filesScrollWheel.setDragAcceleration(10);
    filesScrollWheel.setNumberOfItems(10);
    filesScrollWheel.setSelectedItemOffset(0);
    filesScrollWheel.setOvershootPercentage(75);
    add(filesScrollWheel);
}

filesScreenViewBase::~filesScreenViewBase()
{

}

void filesScreenViewBase::setupScreen()
{
    filesScrollWheel.initialize();
}

void filesScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &okButton)
    {
        //okClicked
        //When okButton clicked execute C++ code
        //Execute C++ code
        // TODO: load file that is highlighted in filesScrollWheel, loading as coloring book layer if coloringBookLayerToggle value is true, and go to drawScreen
    }
    if (&src == &cancelButton)
    {
        //cancelClicked
        //When cancelButton clicked change screen to brushScreen
        //Go to brushScreen with no screen transition
        application().gotobrushScreenScreenNoTransition();
    }
}

void filesScreenViewBase::updateItemCallbackHandler(touchgfx::DrawableListItemsInterface* items, int16_t containerIndex, int16_t itemIndex)
{

}

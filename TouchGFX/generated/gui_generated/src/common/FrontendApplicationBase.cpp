/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <new>
#include <gui_generated/common/FrontendApplicationBase.hpp>
#include <gui/common/FrontendHeap.hpp>
#include <touchgfx/transitions/NoTransition.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Texts.hpp>
#include <touchgfx/hal/HAL.hpp>
#ifdef SIMULATOR
#include <platform/driver/lcd/LCD24bpp.hpp>
#endif
#include <gui/drawscreen_screen/drawScreenView.hpp>
#include <gui/drawscreen_screen/drawScreenPresenter.hpp>
#include <gui/brushscreen_screen/brushScreenView.hpp>
#include <gui/brushscreen_screen/brushScreenPresenter.hpp>
#include <gui/storagesettingsscreen_screen/storageSettingsScreenView.hpp>
#include <gui/storagesettingsscreen_screen/storageSettingsScreenPresenter.hpp>
#include <gui/loginscreen_screen/loginScreenView.hpp>
#include <gui/loginscreen_screen/loginScreenPresenter.hpp>
#include <gui/settingsscreen_screen/settingsScreenView.hpp>
#include <gui/settingsscreen_screen/settingsScreenPresenter.hpp>
#include <gui/palettescreen_screen/paletteScreenView.hpp>
#include <gui/palettescreen_screen/paletteScreenPresenter.hpp>
#include <gui/filesscreen_screen/filesScreenView.hpp>
#include <gui/filesscreen_screen/filesScreenPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
    touchgfx::Texts::setLanguage(GB);
#ifdef SIMULATOR
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
    reinterpret_cast<touchgfx::LCD24bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
#endif
}

/*
 * Screen Transition Declarations
 */

// drawScreen

void FrontendApplicationBase::gotodrawScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotodrawScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotodrawScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<drawScreenView, drawScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// brushScreen

void FrontendApplicationBase::gotobrushScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotobrushScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotobrushScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<brushScreenView, brushScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// storageSettingsScreen

void FrontendApplicationBase::gotostorageSettingsScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotostorageSettingsScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotostorageSettingsScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<storageSettingsScreenView, storageSettingsScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// settingsScreen

void FrontendApplicationBase::gotosettingsScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotosettingsScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotosettingsScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<settingsScreenView, settingsScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// paletteScreen

void FrontendApplicationBase::gotopaletteScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotopaletteScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotopaletteScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<paletteScreenView, paletteScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}

// filesScreen

void FrontendApplicationBase::gotofilesScreenScreenNoTransition()
{
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotofilesScreenScreenNoTransitionImpl);
    pendingScreenTransitionCallback = &transitionCallback;
}

void FrontendApplicationBase::gotofilesScreenScreenNoTransitionImpl()
{
    touchgfx::makeTransition<filesScreenView, filesScreenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
}
